version: '3.8'
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: productTest
      POSTGRES_USER: productUser
      POSTGRES_PASSWORD: productPassword
    ports:
      - "5555:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  app:
    build:
      context: .
      dockerfile: dockerFile_newKafka
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/productTest
      SPRING_DATA_SOURCE_USERNAME: productUser
      SPRING_DATASOURCE_PASSWORD: productPassword
      SPRING_JPA_HIBERNATE_DDL_AUTO: create

  micro2:
    build:
      context: .
      dockerfile: dockerFile_micro2
    ports:
      - "8081:8080"
    depends_on:
      - kafka


  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

volumes:
  db-data:


